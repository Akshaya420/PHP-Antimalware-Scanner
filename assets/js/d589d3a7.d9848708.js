(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},601:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:4},s={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Scanning mode",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/PHP-Antimalware-Scanner/getting-started",editUrl:"https://github.com/marcocesarato/PHP-Antimalware-Scanner/edit/master/docs/docs/getting-started.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/PHP-Antimalware-Scanner/install"},next:{title:"Options",permalink:"/PHP-Antimalware-Scanner/options"}},p=[{value:"Scanning mode",id:"scanning-mode",children:[{value:"Suggestions",id:"suggestions",children:[]}]},{value:"Detection Options",id:"detection-options",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Examples",id:"examples-1",children:[]}],u={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"scanning-mode"},"Scanning mode"),(0,i.kt)("p",null,"The first think you need to decide is the strength, you need to calibrate your scan to find less false positive as possible during scanning but without miss real malware.\nFor this you can choose the aggression level."),(0,i.kt)("p",null,"The scanner permit to have some predefined modes:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Mode"),(0,i.kt)("th",{parentName:"tr",align:null},"Alias"),(0,i.kt)("th",{parentName:"tr",align:null},"\ud83d\ude80"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"None","\xa0",(0,i.kt)("em",{parentName:"td"},"(default)")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"\ud83d\udd34"),(0,i.kt)("td",{parentName:"tr",align:null},"Search for all functions, exploits and malware signs without any restrictions")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Only","\xa0","exploits"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-e")),(0,i.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe0"),(0,i.kt)("td",{parentName:"tr",align:null},"Search only for exploits definitions",(0,i.kt)("br",null),"Use flag: ",(0,i.kt)("inlineCode",{parentName:"td"},"--only-exploits"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Lite","\xa0","mode"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-l")),(0,i.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe1"),(0,i.kt)("td",{parentName:"tr",align:null},"Search for exploits with some restrictions and malware signs ",(0,i.kt)("em",{parentName:"td"},"(on Wordpress and others platform could detect less false positivity)"),(0,i.kt)("br",null),"Use flag: ",(0,i.kt)("inlineCode",{parentName:"td"},"--lite"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Only","\xa0","functions"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-f")),(0,i.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe1"),(0,i.kt)("td",{parentName:"tr",align:null},"Search only for functions ",(0,i.kt)("em",{parentName:"td"},"(on some obfuscated code functions couldn't be detected)")," ",(0,i.kt)("br",null),"Use flag: ",(0,i.kt)("inlineCode",{parentName:"td"},"--only-functions"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Only","\xa0","signatures"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"-s")),(0,i.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe2"),(0,i.kt)("td",{parentName:"tr",align:null},"Search only for malware signatures ",(0,i.kt)("em",{parentName:"td"},"(could be a good solution for Wordpress and others platform to detect less false positivity)"),(0,i.kt)("br",null),"Use flag: ",(0,i.kt)("inlineCode",{parentName:"td"},"--only-signatures"))))),(0,i.kt)("h3",{id:"suggestions"},"Suggestions"),(0,i.kt)("p",null,"If you are running the scanner on a Wordpress project or other popular platform use ",(0,i.kt)("inlineCode",{parentName:"p"},"--only-signatures")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--lite")," flag\nto have check with less false positive but this could miss some dangerous exploits like ",(0,i.kt)("inlineCode",{parentName:"p"},"nano"),"."),(0,i.kt)("h4",{id:"examples"},"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php -d disable_functions='' scanner -s\nphp -d disable_functions='' scanner -l\n")),(0,i.kt)("h2",{id:"detection-options"},"Detection Options"),(0,i.kt)("p",null,"When a malware is detected you will have the following choices (except when scanner is running in report\nmode ",(0,i.kt)("inlineCode",{parentName:"p"},"--report"),"):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Delete file ",(0,i.kt)("inlineCode",{parentName:"li"},"--auto-delete")),(0,i.kt)("li",{parentName:"ul"},"Move to quarantine (",(0,i.kt)("em",{parentName:"li"},"move to")," ",(0,i.kt)("inlineCode",{parentName:"li"},"./scanner-quarantine"),") ",(0,i.kt)("inlineCode",{parentName:"li"},"--auto-quarantine")),(0,i.kt)("li",{parentName:"ul"},"Dry run evil code fixer ",(0,i.kt)("em",{parentName:"li"},"(try to infected fix code and confirm after a visual check)")," ",(0,i.kt)("inlineCode",{parentName:"li"},"--auto-clean")),(0,i.kt)("li",{parentName:"ul"},"Dry run evil line code fixer ",(0,i.kt)("em",{parentName:"li"},"(try to fix infected code and confirm after a visual check)")," ",(0,i.kt)("inlineCode",{parentName:"li"},"--auto-clean-line")),(0,i.kt)("li",{parentName:"ul"},"Open with vim (",(0,i.kt)("em",{parentName:"li"},"need")," ",(0,i.kt)("inlineCode",{parentName:"li"},"php -d disable_functions=''"),")"),(0,i.kt)("li",{parentName:"ul"},"Open with nano (",(0,i.kt)("em",{parentName:"li"},"need")," ",(0,i.kt)("inlineCode",{parentName:"li"},"php -d disable_functions=''"),")"),(0,i.kt)("li",{parentName:"ul"},"Add to whitelist (",(0,i.kt)("em",{parentName:"li"},"add to")," ",(0,i.kt)("inlineCode",{parentName:"li"},"./scanner-whitelist.json"),")"),(0,i.kt)("li",{parentName:"ul"},"Show source"),(0,i.kt)("li",{parentName:"ul"},"Ignore ",(0,i.kt)("inlineCode",{parentName:"li"},"--auto-skip"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage: amwscan [--lite|-a] [--help|-h|-?] [--log|-l <path>] [--backup|-b] [--offset\n        <offset>] [--limit <limit>] [--report|-r] [--report-format <format>]\n        [--version|-v] [--update|-u] [--only-signatures|-s] [--only-exploits|-e]\n        [--only-functions|-f] [--defs] [--defs-exploits] [--defs-functions]\n        [--defs-functions-enc] [--exploits <exploits>] [--functions <functions>]\n        [--whitelist-only-path] [--max-filesize <filesize>] [--silent]\n        [--ignore-paths|--ignore-path <paths>] [--filter-paths|--filter-path <paths>]\n        [--auto-clean] [--auto-clean-line] [--auto-delete] [--auto-quarantine]\n        [--auto-skip] [--auto-whitelist] [--auto-prompt <prompt>] [--path-whitelist\n        <path>] [--path-backups <path>] [--path-quarantine <path>] [--path-logs <path>]\n        [--path-report <path>] [--disable-colors|--no-colors|--no-color]\n        [--disable-cache|--no-cache] [--disable-report|--no-report] [<path>]\n")),(0,i.kt)("h2",{id:"examples-1"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'php amwscan ./mywebsite/http/ -l -s --only-exploits\nphp amwscan -s --max-filesize="5MB"\nphp amwscan -s -logs="/user/marco/scanner.log"\nphp amwscan --lite --only-exploits\nphp amwscan --exploits="double_var2" --functions="eval, str_replace"\nphp amwscan --ignore-paths="/my/path/*.log,/my/path/*/cache/*"\n')))}c.isMDXComponent=!0}}]);